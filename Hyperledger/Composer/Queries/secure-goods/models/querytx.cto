/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace com.makotogo.learn.composer.securegoods.querytx

import org.hyperledger.composer.system.HistorianRecord
import com.makotogo.learn.composer.securegoods.asset.Order
import com.makotogo.learn.composer.securegoods.participant.Buyer

/**
  These transactions are used as a layer over
  named queries so they can be securely accessed
  using permissions.acl.
 */

/**
  Find all orders for the specified buyer and return
  the Order records to the caller.

  This transaction is not recorded in the blockchain.
 */
@returns(Order[])
@commit(false)
transaction FindOrdersForBuyer {
  o String buyerId
}

/**
  Find all orders for the specified seller and return
  the Order records to the caller.
 */
@returns(Order[])
transaction FindOrdersForSeller {
  o String sellerId
}

/**
  Find all orders for the specified shipper and return
  the Order records to the caller.

  This transaction is not recorded in the blockchain.
 */
@returns(Order[])
@commit(false)
transaction FindOrdersForShipper {
  o String shipperId
}

/**
  Find all Orders that contain the specified Item.
 */
@returns(Order[])
transaction FindOrdersByItem {
  o String itemId
}

/**
  Find all Orders that contain the specified CurrencyCode
 */
 @returns(Order[])
transaction FindOrdersByCurrencyCode {
  o String currencyCode
}

/**
  Find all Historian records and return them to the caller.
 */
@returns(HistorianRecord[])
transaction FindAllHistory {
}

/**
  Find all Orders from the Historian (and only HistorianRecords for Orders)
  and return them to the caller.
 */
 @returns(HistorianRecord[])
transaction FindOrderHistory {
}